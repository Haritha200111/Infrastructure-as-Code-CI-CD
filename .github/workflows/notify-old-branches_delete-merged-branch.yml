name: Notify Old Branches & Delete Merged Ones

on:
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at 00:00 UTC
  workflow_dispatch:      # Manual trigger support

jobs:
  manage-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Find old and merged branches
        id: process_branches
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const defaultBranch = 'main';  // Change if your repo uses another default
            const protectedBranches = ['main', 'master', 'development'];
            const cutoffDays = 90;
            const now = new Date();

            const oldBranches = [];
            const deletedBranches = [];

            const branches = await github.paginate(
              github.rest.repos.listBranches,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
              }
            );

            for (const branch of branches) {
              const name = branch.name;
              if (protectedBranches.includes(name)) continue;

              try {
                const commit = await github.rest.repos.getCommit({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: name
                });

                const lastCommitDate = new Date(commit.data.commit.committer.date);
                const ageInDays = (now - lastCommitDate) / (1000 * 60 * 60 * 24);

                if (ageInDays > cutoffDays) {
                  oldBranches.push(`${name} (last updated ${Math.floor(ageInDays)} days ago)`);
                }

                //  Check if branch was merged via PR
                const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: commit.data.sha
                });

                const mergedPR = prs.data.find(pr => pr.merged_at !== null);

                if (mergedPR) {
                  await github.rest.git.deleteRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: `heads/${name}`
                  });
                  deletedBranches.push(name);
                }

              } catch (err) {
                console.log(`Skipping branch ${name}: ${err.message}`);
              }
            }

            core.setOutput('oldBranches', oldBranches.join('\n') || 'None');
            core.setOutput('deletedBranches', deletedBranches.join('\n') || 'None');

      - name: Send Email Report
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: harithavedhavalli@gmail.com
          password: ${{ secrets.EMAIL_SMTP_PASSWORD }}
          subject: "Branch Cleanup Report for ${{ github.repository }}"
          to: haritharavichandrann@gmail.com
          from: harithavedhavalli@gmail.com
          body: |
            Branch Cleanup Report for ${{ github.repository }}

              Branches older than 90 days:
            ${{ steps.process_branches.outputs.oldBranches }}

            üóëÔ∏è Deleted merged branches:
            ${{ steps.process_branches.outputs.deletedBranches }}
